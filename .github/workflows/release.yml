name: Release

on:
  workflow_dispatch:
  # pull_request:
  pull_request_target:
    types:
      - closed
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.png'
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - '**.md'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release
  
  # If this is enabled it will cancel current running and start latest
  cancel-in-progress: true

jobs:
  get-next-version:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' 
    uses: semantic-release-action/next-release-version/.github/workflows/next-release-version.yml@v4

  # test:
  #   name: Test
  #   runs-on: ubuntu-20.04
  #   continue-on-error: false
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@stable
  #     - name: Run Tests
  #       run: make run-tests
  #       shell: bash

  release:
    if: needs.get-next-version.outputs.new-release-published == 'true'
    name: Build and Release
    # TODO: implement marrix https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     platform:
    #       - linux/amd64
    #       - linux/arm64
    runs-on: ubuntu-22.04
    needs: [
      get-next-version,
      #  test,
    ]
    env:
      HUSKY: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # - name: Semantic Release
      #   uses: cycjimmy/semantic-release-action@v3
      #   with:
      #     dry_run: true
      #     extra_plugins: |
      #       @semantic-release-cargo/semantic-release-cargo
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_TOKEN }}
      - id: docker-tag
        uses: yuya-takeyama/docker-tag-from-github-ref-action@v1
      - name: Install semantic-release-cargo
        uses: taiki-e/install-action@v2
        with:
          tool: semantic-release-cargo@2
      - name: Prepare semantic-release for Rust
        run: semantic-release-cargo prepare ${{ needs.get-next-version.outputs.new-release-version }}
      - name: Build
        run: CARGO_TARGET_DIR=./ci-target cargo build --release
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile.github
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true 
          tags: | 
            ghcr.io/sarendsen/replex:latest
      - name: Invoke semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: npx semantic-release